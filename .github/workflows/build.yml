name: build

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4.1.1
      - name: setup golang
        uses: actions/setup-go@v5.0.0
        with:
          go-version-file: "go.mod"
      - name: add build file suffix
        if: ${{ matrix.goos == 'windows' }}
        run: echo "SUFFIX=.exe" >> $GITHUB_ENV
      - name: build project
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: go build -o build/mcgen_${{ matrix.goos }}_${{ matrix.goarch }}${{ env.SUFFIX }} main.go
      - name: store binary
        uses: actions/upload-artifact@v4.3.1
        with:
          name: ${{ matrix.goos }}_${{ matrix.goarch }}
          path: build/
  docker:
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      contents: read
      packages: write
    steps:
      - name: checkout repository
        uses: actions/checkout@v4.1.1
      - name: download binary
        uses: actions/download-artifact@v4.1.4
        with:
          path: build/
      - name: login to github registry
        uses: docker/login-action@v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: build development image
        uses: docker/build-push-action@v5.2.0
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        with:
          context: .
          tags: ghcr.io/${{ github.repository }}:development
          push: ${{ github.ref == 'refs/heads/main' }}
      - name: build latest image
        uses: docker/build-push-action@v5.2.0
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          context: .
          tags: ghcr.io/${{ github.repository }}:${{ github.ref_name }},ghcr.io/${{ github.repository }}:latest
          push: true
  release:
    runs-on: ubuntu-latest
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    steps:
      - name: download all binaries
        uses: actions/download-artifact@v4.1.4
        with:
          path: build/
      - name: upload artifacts to release
        uses: softprops/action-gh-release@v2.0.3
        with:
          files: build/**/*
